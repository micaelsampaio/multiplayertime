swagger: "2.0"
info:
  version: "0.0.1"
  title: Multiplayer Time API
# during dev, should point to your local machine
host: localhost:2000
# basePath prefixes all resource paths 
basePath: /api
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
tags:
  - name: user
    description: "User"
  - name: authentication 
    description: "Authentication"
  - name: game
    description: "Games" 
  - name: friend
    description: "Friends"
  - name: room
    description: "Room"
securityDefinitions:
  jsonWebToken:
    type: apiKey
    in: header
    name: Authorization
  jsonAdminWebToken:
    type: apiKey
    in: header
    name: Authorization
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    post:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /upload:
    x-swagger-router-controller: game_controller
    post:
      operationId: upload
      summary: Uploads a file.
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: avatar 
          type: file
          description: The file to upload.
        - in: formData
          name: texto
          type: string
        - in: formData
          name: route
          type: string
        - in: formData
          name: name
          type: string 
        - in: formData
          name: description
          type: string
        - in: formData
          name: players
          type: string
        - in: formData
          name: min_players
          type: integer
        - in: formData
          name: max_players
          type: integer
        - in: formData
          name: color
          type: string
        - in: formData
          name: category_id
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  ############################ Users ######################
  /user:
    x-swagger-router-controller: user_controller
    get:
      operationId: getAllUsers
      tags:
        - user
      description: get User information
      responses:
        "200":
          description: Success
          schema:
              type: array
              items: 
                type: object
                allOf:
                  - $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: addUser
      tags: 
        - user
      description: replace user info
      parameters:
        - name: User
          description: User properties
          in: body
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/avatar/:
    x-swagger-router-controller: user_controller
    post:
      operationId: updateAvatar
      tags: 
        - user
      security:
        - jsonWebToken: []
      description: replace user avatar
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: avatar 
          type: file
          description: The file to replace.
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse" 
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/password/:
    x-swagger-router-controller: user_controller
    post:
      operationId: updatePassword 
      tags: 
        - user
      description: replace user avatar
      parameters:
        - name: User
          description: User properties
          in: body
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
              newpassword: 
               type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse" 
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/{id}:
    x-swagger-router-controller: user_controller
    get:
      operationId: getProfile
      description: get a User
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserProfile"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/username/{id}:
    x-swagger-router-controller: user_controller
    get:
      operationId: checkUsername
      tags:
        - user
      description: update a User
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse" 
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/email/{id}:
    x-swagger-router-controller: user_controller
    get:
      operationId: checkEmail
      tags:
        - user
      description: update a User
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/find/{id}:
    x-swagger-router-controller: user_controller
    get:
      operationId: findUsers
      tags: 
        - user
      description: replace user info
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
              type: array
              items: 
                type: object
                allOf:
                  - $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  ####################### USERS ########################
  
  ####################### LOGIN ########################
  /login:
    x-swagger-router-controller: authentication_controller
    post:
      operationId: login
      tags: 
        - authentication
      description: Log in user in api
      parameters:
        - name: title
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /logout:
    x-swagger-router-controller: authentication_controller
    get:
      operationId: logout
      tags: 
        - authentication
      security:
        - jsonWebToken: []
      description: Log out user of api
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /checklogin:
    x-swagger-router-controller: authentication_controller
    post:
      operationId: getLogin
      tags: 
        - authentication
      description: Log in user in api
      parameters:
        - name: title
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Token"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: checklogin
      tags: 
        - authentication
      security:
        - jsonWebToken: []
      description: Log in user in api
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  ################### Login #######################
  ################### Friends #####################
  
  ##TODODO
  /friend/add/{id}:
    x-swagger-router-controller: friend_controller
    get:
      operationId: addFriend
      tags:
        - friend
      description: add a User as friend
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /friend/remove/{id}:
    x-swagger-router-controller: friend_controller
    get:
      operationId: removeFriend
      tags:
        - friend
      description: add a User as friend
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /friend/accept/{id}:
    x-swagger-router-controller: friend_controller
    get:
      operationId: acceptFriend
      tags:
        - friend
      description: add a User as friend
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /friend/list/{id}:
    x-swagger-router-controller: friend_controller
    get:
      operationId: getFriends
      tags:
        - friend
      #security:
      #  - jsonAdminWebToken: []
      description: get all Friends
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
              type: array
              items: 
                type: object
                allOf:
                  - $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /friend/requests:
    x-swagger-router-controller: friend_controller
    get:
      operationId: getFriendRequests
      tags:
        - friend
      #security:
      #  - jsonAdminWebToken: []
      description: get all Friends
      responses:
        "200":
          description: Success
          schema:
              type: array
              items: 
                type: object
                allOf:
                  - $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /friend/requestssent:
    x-swagger-router-controller: friend_controller
    get:
      operationId: getFriendRequestsSent
      tags:
        - friend
      #security:
      #  - jsonAdminWebToken: []
      description: get all Friends
      responses:
        "200":
          description: Success
          schema:
              type: array
              items: 
                type: object
                allOf:
                  - $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  ################### Friends #####################
  ################### Admin #######################
  
  ################### CATEGORY ####################
  /category:
    x-swagger-router-controller: category_controller
    get:
      operationId: getCategories
      tags:
        - game
      #security:
      #  - jsonAdminWebToken: []
      description: get all categories
      responses:
        "200":
          description: Success
          schema:
              type: array
              items: 
                type: object
                allOf:
                  - $ref: "#/definitions/Category"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: addCategory
      tags: 
        - game
      security:
        - jsonAdminWebToken: []
      description: add a category
      parameters:
        - name: title
          description: Catergory properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Category"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteManyCategories
      tags:
        - game
      #security:
      #  - jsonAdminWebToken: []
      description: remove many categories
      parameters:
        - in: body
          description: categories id's
          required: true
          name: categories
          schema:
            $ref: "#/definitions/ArrayId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /category/{id}:
    x-swagger-router-controller: category_controller
    get:
      operationId: getCategory
      tags:
        - game
      #security:
      #  - jsonAdminWebToken: []
      description: Get category by id
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Category"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
    put:
      operationId: updateCategory
      tags: 
        - game
      security:
        - jsonAdminWebToken: []
      description: add a category
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: category
          description: Catergory properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Category"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteCategory
      tags: 
        - game
      #security:
      #  - jsonAdminWebToken: []
      description: delete category by id
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
            
  ################### CATEGORY ####################
  
  ################### GAMES #######################
  
  /game:
    x-swagger-router-controller: game_controller
    get:
      operationId: getGames
      tags:
        - game
      #security:
      #  - jsonAdminWebToken: []
      description: get all Games
      responses:
        "200":
          description: Success
          schema:
              type: array
              items: 
                type: object
                allOf:
                  - $ref: "#/definitions/Game"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: addGame
      tags: 
        - game
      security:
        - jsonAdminWebToken: []
      summary: Add a new Game
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: card_image 
          type: file
          description: The file to upload.
        - in: formData
          name: logo 
          type: file
          description: The file to upload.
        - in: formData
          name: route
          type: string
        - in: formData
          name: name
          type: string 
        - in: formData
          name: description
          type: string
        - in: formData
          name: min_players
          type: integer
        - in: formData
          name: max_players
          type: integer
        - in: formData
          name: color
          type: string
        - in: formData 
          name: category_id
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteManyGames
      tags:
        - game
      #security:
      #  - jsonAdminWebToken: []
      description: remove many Games
      parameters:
        - in: body
          description: Games id's
          required: true
          name: Games
          schema:
            $ref: "#/definitions/ArrayId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /game/{id}:
    x-swagger-router-controller: game_controller
    get:
      operationId: getGame
      tags:
        - game
      description: get game by id
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Game"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
    post:
      operationId: updateGame
      tags: 
        - game
      security:
        - jsonAdminWebToken: []
      summary: Add a new Game
      consumes:
        - multipart/form-data
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - in: formData
          name: card_image 
          type: file
          description: The file to upload.
        - in: formData
          name: logo 
          type: file
          description: The file to upload.
        - in: formData
          name: route
          type: string
        - in: formData
          name: name
          type: string 
        - in: formData
          name: description
          type: string
        - in: formData
          name: min_players
          type: integer
        - in: formData
          name: max_players
          type: integer
        - in: formData
          name: color
          type: string
        - in: formData 
          name: category_id
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteGame
      tags: 
        - game
      #security:
      #  - jsonAdminWebToken: []
      description: delete Game by id
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
  /game/route/{id}:
    x-swagger-router-controller: game_controller
    get:
      operationId: getGameByRoute
      tags:
        - game
      description: get game by id
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Game"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /game/recent:
    x-swagger-router-controller: game_controller
    get:
      operationId: getRecentGames
      tags:
        - game
      description: get all Games
      responses:
        "200":
          description: Success
          schema:
              type: array
              items: 
                type: object
                allOf:
                  - $ref: "#/definitions/Game"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /game/category/{id}:
    x-swagger-router-controller: game_controller
    get:
      operationId: getGamesByCategory
      tags:
        - game
      description: get all Games by Category
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
              type: array
              items: 
                type: object
                allOf:
                  - $ref: "#/definitions/Game"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"          
  ################### GAMES #######################
  ################### ROOM  #######################
  /room/invite/{id}:
    x-swagger-router-controller: room_controller
    post:
      operationId: addInvite
      tags: 
        - room
      security:
      - jsonWebToken: []
      summary: Add a new Invite
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - in: body
          description: Players id's
          required: true
          name: Invites
          schema:
            $ref: "#/definitions/Invite"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /room/invite:
    x-swagger-router-controller: room_controller
    get:
      operationId: getInvites
      tags: 
        - room
      security:
      - jsonWebToken: []
      summary: Add a new Invite
      responses:
        "200":
          description: Success
          schema:
              type: array
              items: 
                type: object
                allOf:
                  - $ref: "#/definitions/InviteInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /room/invite/game/{id}:
    x-swagger-router-controller: room_controller
    get:
      operationId: getInvitesByGame
      tags: 
        - room
      security:
      - jsonWebToken: []
      summary: Add a new Invite
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
              type: array
              items: 
                type: object
                allOf:
                  - $ref: "#/definitions/InviteInfo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /room/invite/remove/{id}:
    x-swagger-router-controller: room_controller
    get:
      operationId: removeInvite
      tags:
        - game
      description: get game by id
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /room/invites/remove/{id}:
    x-swagger-router-controller: room_controller
    get:
      operationId: removeAllInvites
      tags:
        - game
      description: get game by id
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ApiResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  ################### ROOM  #######################
  ################### ADMIN #######################
  
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  ApiResponse:
    type: object
    properties:
      success:
        type: boolean
        description: returns true if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  User:
    type: object
    properties:
      id:
        type: string
        description: unique id from user
      username:
        type: string
        description: username from User must be unique
      password: 
        type: string 
        description: password of user can't be less than 6 characters
      email:
        type: string
        description: email of user must be unique
      avatar:
        type: string
        description: image of user
      isAdmin:
        type: boolean
        description: true is admin false is not
      country:
        type: string
      token:
        type: string
        description: user session
      since:
        type: string
        description: date of sign up
  UserProfile:
    type: object
    properties:
      id:
        type: string
        description: unique id from user
      username:
        type: string
        description: username from User must be unique
      email:
        type: string
        description: email of user must be unique
      avatar:
        type: string
        description: image of user
      country:
        type: string
      isFriend:
        type: string
      since:
        type: string
        description: date of sign up
  UserLogin:
    type: object
    properties:
      username:
        type: string
        description: username from User must be unique
      password: 
        type: string 
        description: password of user can't be less than 6 characters
  LoginResponse:
    type: object
    properties:
      success:
        type: boolean
      messages:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            message:
              type: string
      token: 
        type: string
      username:
        type: string
      avatar:
        type: string
      country:
        type: string
      id:
        type: string
  Category:
    type: object
    properties:
      id:
        type: string
      name: 
        type: string 
      description: 
        type: string 
      color:
        type: string
  Game:
    type: object
    properties:
      id:
        type: string
      route: 
        type: string
      name: 
        type: string 
      description: 
        type: string 
      players:
        type: string
      min_players:
        type: integer
      max_players:
        type: integer
      color:
        type: string
      created_at:
        type: string
      card_image:
        type: string
      logo:
        type: string
      category:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          color:
            type: string
  ArrayId:
    type: object
    properties:
      id:
        type: array
        items:
            type: string
  Invite:
    type: object
    properties:
      game:
        type: string
      id:
        type: array
        items:
            type: string
  InviteInfo:
    type: object
    properties:
      id:
        type: string
      room:
        type: string
      game:
        type: object
        properties:
          name:
            type: string
          logo:
            type: string
          route:
            type: string
      user:
        type: object
        properties:
          username: 
            type: string
          avatar:
            type: string
  Token:
    type: object
    properties:
      token:
        type: string